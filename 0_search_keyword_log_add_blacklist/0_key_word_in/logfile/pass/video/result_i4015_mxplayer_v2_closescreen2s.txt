
09-06 02:58:10.710  1299  1365 I DisplayPowerController: Blocking screen on until initial contents have been drawn.
09-06 02:58:10.753  1299  1299 D BatteryService: onReceive: action = android.intent.action.SCREEN_ON
09-06 02:58:10.850  2184  2184 D KMS_JavaServer_callback: action: android.intent.action.SCREEN_ON
09-06 02:58:10.854  1634  1634 D QSLMJ   : SLM received action android.intent.action.SCREEN_ON
09-06 02:58:10.858  2156  2156 D EMVCB_SRVC: Screen ON -->
09-06 02:58:10.878  3191  3191 D MX.Player.FF: PrepareAsync()
09-06 02:58:11.070  3191  4640 I *MX.FFReader: start-time: 0ms, duration: 319384ms
09-06 02:58:11.071  3191  3191 D MX.Player.Builtin: PrepareAsync()
09-06 02:58:11.079   926  2543 I ExtendedNuUtils: printFileName fd(11) -> /storage/emulated/0/DCIM/Camera/VID_20210902_035616.mp4
09-06 02:58:11.082  3191  3191 V MediaPlayerNative: prepareAsync
09-06 02:58:11.109  3191  3191 V MediaPlayer-JNI: getDuration: 319384 (msec)
09-06 02:58:11.112  3191  3191 V MediaPlayer-JNI: getDuration: 319384 (msec)
09-06 02:58:11.150  3191  3191 V MediaPlayer-JNI: seekTo: 235748(msec), mode=0
09-06 02:58:11.151   926  4643 V NuPlayer: kWhatSeek seekTimeUs=235748000 us, mode=0, needNotify=1
09-06 02:58:11.151   926  4643 I GenericSource: start
09-06 02:58:11.176   926  4649 V AudioSink: open(48000, 2, 0x0, 0x4000002, 0, 49 0x10)
09-06 02:58:11.176   926  4649 V AudioTrack: set(): streamType 3, sampleRate 48000, format 0x4000002, channelMask 0x3, frameCount 0, flags #10, notificationFrames 0, sessionId 49, transferType 1, uid 10115, pid 3191
09-06 02:58:11.176   926  4649 V AudioTrack: set(): streamType 3 frameCount 0 flags 0010
09-06 02:58:11.176   926  4649 V AudioTrack: set(): Offload request, forcing to Direct Output
09-06 02:58:11.178   953  2042 I OMXMaster: makeComponentInstance(OMX.qcom.video.decoder.avc) in android.hardwar process
09-06 02:58:21.409  3191  3191 V MX.Player.Joint: Pause
09-06 02:58:21.409  3191  3191 V MX.Player.Joint: Pause [1]. 1=235748 2=0 ex=null
09-06 02:58:22.311  3191  3191 V MediaPlayerNative: destructor
09-06 02:58:25.768  3191  3191 D MX.Player.FF: PrepareAsync()
09-06 02:58:25.963  3191  4705 I *MX.FFReader: start-time: 0ms, duration: 319384ms
09-06 02:58:25.963  3191  3191 D MX.Player.Builtin: PrepareAsync()
09-06 02:58:25.971   926  2543 I ExtendedNuUtils: printFileName fd(11) -> /storage/emulated/0/DCIM/Camera/VID_20210902_035616.mp4
09-06 02:58:25.972  3191  3191 V MediaPlayerNative: prepareAsync
09-06 02:58:25.991  3191  3191 V MediaPlayer-JNI: getDuration: 319384 (msec)
09-06 02:58:25.993  3191  3191 V MediaPlayer-JNI: getDuration: 319384 (msec)
09-06 02:58:26.012  3191  3191 V MediaPlayer-JNI: start
09-06 02:58:26.012  3191  3191 V MediaPlayerNative: start
09-06 02:58:26.012   926  2543 V NuPlayerDriver: start(0xe6440f00), state is 4, eos is 0
09-06 02:58:26.013   926  4715 I GenericSource: start
09-06 02:58:26.020   926  4718 V AudioSink: open(48000, 2, 0x0, 0x4000002, 0, 57 0x10)
09-06 02:58:26.021   926  4718 V AudioTrack: set(): streamType 3, sampleRate 48000, format 0x4000002, channelMask 0x3, frameCount 0, flags #10, notificationFrames 0, sessionId 57, transferType 1, uid 10115, pid 3191
09-06 02:58:26.021   926  4718 V AudioTrack: set(): streamType 3 frameCount 0 flags 0010
09-06 02:58:26.021   926  4718 V AudioTrack: set(): Offload request, forcing to Direct Output
09-06 02:58:26.026   953  2042 I OMXMaster: makeComponentInstance(OMX.qcom.video.decoder.avc) in android.hardwar process
09-06 02:58:40.099  1299  1365 I DisplayPowerController: Blocking screen off
09-06 02:58:40.145  3191  3191 V MX.Player.Joint: Pause
09-06 02:58:40.145  3191  3191 V MX.Player.Joint: Pause [1]. 1=13763 2=0 ex=null
09-06 02:58:40.301  3191  3191 V MediaPlayerNative: destructor
09-06 02:58:40.855  1299  1365 I DisplayPowerController: Blocking screen on until initial contents have been drawn.
09-06 02:58:41.839  1299  1299 D BatteryService: onReceive: action = android.intent.action.SCREEN_OFF
09-06 02:58:41.885  2184  2184 D KMS_JavaServer_callback: action: android.intent.action.SCREEN_OFF
09-06 02:58:41.888  1634  1634 D QSLMJ   : SLM received action android.intent.action.SCREEN_OFF
09-06 02:58:41.890  2156  2156 D EMVCB_SRVC: Screen OFF -->
09-06 02:58:41.921  3191  3191 D MX.Player.FF: PrepareAsync()
09-06 02:58:41.951  1299  1299 D BatteryService: onReceive: action = android.intent.action.SCREEN_ON
09-06 02:58:41.974  2184  2184 D KMS_JavaServer_callback: action: android.intent.action.SCREEN_ON
09-06 02:58:41.977  1634  1634 D QSLMJ   : SLM received action android.intent.action.SCREEN_ON
09-06 02:58:41.978  2156  2156 D EMVCB_SRVC: Screen ON -->
09-06 02:58:42.110  3191  4751 I *MX.FFReader: start-time: 0ms, duration: 319384ms
09-06 02:58:42.110  3191  3191 D MX.Player.Builtin: PrepareAsync()
09-06 02:58:42.118   926  2017 I ExtendedNuUtils: printFileName fd(11) -> /storage/emulated/0/DCIM/Camera/VID_20210902_035616.mp4
09-06 02:58:42.120  3191  3191 V MediaPlayerNative: prepareAsync
09-06 02:58:42.145  3191  3191 V MediaPlayer-JNI: getDuration: 319384 (msec)
09-06 02:58:42.148  3191  3191 V MediaPlayer-JNI: getDuration: 319384 (msec)
09-06 02:58:42.164  3191  3191 V MediaPlayer-JNI: seekTo: 13764(msec), mode=0
09-06 02:58:42.164   926  4755 V NuPlayer: kWhatSeek seekTimeUs=13764000 us, mode=0, needNotify=1
09-06 02:58:42.165  3191  3191 V MediaPlayer-JNI: start
09-06 02:58:42.165  3191  3191 V MediaPlayerNative: start
09-06 02:58:42.165   926  2017 V NuPlayerDriver: start(0xe6440f00), state is 4, eos is 0
09-06 02:58:42.170   926  4755 I GenericSource: start
09-06 02:58:42.189   926  4760 V AudioSink: open(48000, 2, 0x0, 0x4000002, 0, 65 0x10)
09-06 02:58:42.190   926  4760 V AudioTrack: set(): streamType 3, sampleRate 48000, format 0x4000002, channelMask 0x3, frameCount 0, flags #10, notificationFrames 0, sessionId 65, transferType 1, uid 10115, pid 3191
09-06 02:58:42.190   926  4760 V AudioTrack: set(): streamType 3 frameCount 0 flags 0010
09-06 02:58:42.190   926  4760 V AudioTrack: set(): Offload request, forcing to Direct Output
09-06 02:58:42.222   953  3365 I OMXMaster: makeComponentInstance(OMX.qcom.video.decoder.avc) in android.hardwar process
